---
import Layout from "../layouts/Layout.astro";
import Footer from "../components/Footer.astro";
import Sidebar from "../components/Sidebar.astro";
import Snippet from "../components/Snippet.astro";
import Hero from "../components/Hero.astro";
import OpticSelector from "../components/OpticSelector.astro";
import Header from "../components/Header.astro";
import RankingModal from "../components/RankingModal.astro";
import Discussions from "../components/Discussions.astro";
import { askama } from "../askama";
---

<Layout title="{{ query }} - Cuely">
  <main class="flex w-full flex-col">
    <div class="border-b bg-neutral-50">
      <Header searchbar={{ query: askama`query` }} />
    </div>

    <div
      class="search-content mx-1 grid gap-y-6 pt-3 sm:px-5 md:grid-cols-[minmax(50ch,48rem)_1fr] md:grid-rows-[auto_1fr] md:gap-x-12 md:pl-20 lg:mx-0 lg:px-36"
    >
      <!-- Stats and settings -->
      <div class="mx-auto flex w-full justify-between">
        <div class="flex h-full flex-col justify-center text-sm text-gray-600">
          <p class="h-fit">
            Found {askama`num_matches $ 24`} results in {
              askama`search_duration_sec $ 0.42s`
            } seconds
          </p>
        </div>
        <div class="flex">
          <OpticSelector
            current_optic_url="current_optic_url"
            default_optics="default_optics"
          />
          <div class="select-region flex h-full flex-col justify-center">
            <select
              form="searchbar-form"
              name="gl"
              onchange="document.getElementById('searchbar-form').submit()"
              class="max-w-[100px] border-0 bg-transparent text-sm hover:cursor-pointer"
            >
              {
                askama.for_("region_selection in all_regions", () =>
                  askama.match("region_selection", {
                    "RegionSelection::Selected(region)": (
                      <option value="{{ region.gl() }}" selected>
                        {askama`region.name() $ {{address.country}}`}
                      </option>
                    ),
                    "RegionSelection::Unselected(region)": (
                      <option value="{{ region.gl() }}">
                        {askama`region.name() $ {{address.country}}`}
                      </option>
                    ),
                  })
                )
              }
            </select>
          </div>
        </div>
      </div>

      <!-- Search results -->
      <div class="col-start-1 flex min-w-0 max-w-2xl flex-col space-y-10">
        {
          askama.if_("let Some(correction) = spell_correction", () => (
            <div>
              Did you mean:{" "}
              <a
                class="title-link font-medium"
                href="/search?q={{ correction.raw|urlencode }}"
              >
                {askama`correction.highlighted|safe $ {{lorem.sentence}}`}
              </a>
            </div>
          ))
        }

        {
          askama.for_("item in search_result", () => (
            <>
            {
              askama.if_("loop.index == 3", () => (
                <Discussions discussions="discussions" />
              ))
            }
            <div class="flex w-full">
              <div class="flex min-w-0 grow flex-col space-y-1">
                <div class="flex min-w-0">
                  <div class="flex min-w-0 grow flex-col space-y-1">
                    <div class="flex items-center text-sm">
                      <a
                        class="url truncate text-gray-800 hover:no-underline"
                        href="{{ item.url }}"
                      >
                        {askama`item.pretty_url $ {{internet.url}}`}
                      </a>
                    </div>
                    <a
                      class="title-link truncate text-xl font-medium"
                      title="{{ item.title }}"
                      href="{{ item.url }}"
                    >
                      {askama`item.title $ {{lorem.sentence}}`}
                    </a>
                  </div>
                  <div
                    class="adjust-btn hidden min-w-fit items-center justify-center md:flex"
                    data-site="{{ item.site }}"
                  >
                    <Hero class="w-6" icon="adjustments" />
                  </div>
                </div>
                <div class="text-sm text-snippet">
                  <Snippet snippet={askama`item.snippet`} />
                </div>
              </div>
            </div>
          </>
          ))
        }

        <div class="flex w-full items-center justify-center">
          {
            askama.if_(
              "let Some(url) = prev_page_url",
              <a href="{{ url }}">
                <Hero class="change-page-active" icon="chevron-left" />
              </a>,
              <Hero class="change-page-inactive" icon="chevron-left" />
            )
          }
          <div class="mx-2">
            Page {askama`current_page $ 5`}
          </div>
          <a href="{{ next_page_url }}">
            <Hero class="change-page-active" icon="chevron-right" />
          </a>
        </div>
      </div>

      <!-- Sidebar -->
      {
        askama.if_(
          "let Some(sidebar) = sidebar",
          <div class="row-start-2 flex justify-center pt-10 md:col-start-2 md:row-span-2 md:row-start-1">
            <Sidebar sidebar="sidebar" />
          </div>
        )
      }
    </div>

    <!-- Ranking modal -->
    <RankingModal />
  </main>

  <Footer />
</Layout>

<style>
  .change-page-inactive {
    @apply w-6 text-gray-500;
  }

  .change-page-active {
    @apply w-6 text-brand/80 hover:text-brand;
  }

  .title-link {
    @apply text-blue-800 visited:text-purple-800;
    max-width: calc(100% - 30px);
  }
  
  .url {
    max-width: calc(100% - 100px);
  }

  .adjust-btn {
    @apply w-5 text-gray-500/25 hover:cursor-pointer hover:text-gray-500;
  }

  .adjust-btn * {
    pointer-events: none;
  }

  .search-content {
    text-rendering: optimizeLegibility;
    font-smooth: grayscale;
    -moz-osx-font-smoothing: grayscale;
  }

  .text-snippet {
    font-weight: 400;
  }
</style>

<noscript>
  <style>
    .adjust-btn {
      display: none;
    }
  </style>
</noscript>

<link rel="stylesheet" href="/css/highlightjs-default.min.css" />
<script is:inline src="/js/highlight.min.js"></script>
<script is:inline>
  var rankingAdjustButtons = document.querySelectorAll(".adjust-btn");
  var rankingModal = document.getElementById("ranking-modal");

  document.addEventListener("click", (elem) => {
    rankingModal.classList.remove("modal-open");
    rankingModal.classList.add("modal-closed");
  });

  var rankingModalHeight = rankingModal.clientHeight;

  rankingAdjustButtons.forEach((btn) => {
    btn.addEventListener("click", (event) => {
      event.stopPropagation();

      const elem = event.target;

      updateModal(elem.dataset.site);

      const rect = elem.getBoundingClientRect();
      rankingModal.style.left = rect.left + rect.width + 5 + "px";
      rankingModal.style.top =
        rect.top +
        document.documentElement.scrollTop -
        rankingModalHeight / 2 +
        "px";

      setTimeout(() => {
        rankingModal.classList.remove("modal-closed");
        rankingModal.classList.add("modal-open");
      }, 0);
    });
  });
</script>
<script is:inline>
  hljs.highlightAll();
</script>
