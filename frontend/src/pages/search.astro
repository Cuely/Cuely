---
import Layout from "../layouts/Layout.astro";
import Footer from "../components/Footer.astro";
import Entity from "../components/Entity.astro";
import Hero from "../components/Hero.astro";
import GoggleSelector from "../components/GoggleSelector.astro";
import { askama } from "../askama";
import Header from "../components/Header.astro";
---

<Layout title="Cuely - {{ query }}">
  <main class="flex flex-col w-full">
    <div class="border-b bg-neutral-50">
      <Header searchbar={{ query: askama`query` }} />
    </div>

    <div
      class="grid sm:px-5 md:pl-20 lg:px-32 mx-1 lg:mx-0 md:gap-x-12 md:grid-cols-[minmax(50ch,48rem)_1fr] md:grid-rows-[auto_1fr]"
    >
      <!-- Stats and settings -->
      <div class="flex mt-1 w-full justify-between mx-auto">
        <div class="flex flex-col h-full justify-center text-sm text-gray-600">
          <p class="h-fit">
            Found {askama`num_matches $ 24`} results in {
              askama`search_duration_sec $ 0.42s`
            } seconds
          </p>
        </div>
        <div class="flex">
          <GoggleSelector
            current_goggle_url="current_goggle_url"
            default_goggles="default_goggles"
          />
          <div
            class="select-region h-full flex flex-col justify-center p-0 m-0"
          >
            <select
              form="searchbar-form"
              name="gl"
              onchange="document.getElementById('searchbar-form').submit()"
              class="p-0 m-0 hover:cursor-pointer bg-transparent text-sm border-0 max-w-[100px]"
            >
              {
                askama.for_("region_selection in all_regions", () =>
                  askama.match("region_selection", {
                    "RegionSelection::Selected(region)": (
                      <option value="{{ region.gl() }}" selected>
                        {askama`region.name() $ {{address.country}}`}
                      </option>
                    ),
                    "RegionSelection::Unselected(region)": (
                      <option value="{{ region.gl() }}">
                        {askama`region.name() $ {{address.country}}`}
                      </option>
                    ),
                  })
                )
              }
            </select>
          </div>
        </div>
      </div>

      <!-- Search results -->
      <div class="col-start-1 flex flex-col">
        <div class="flex flex-col pt-4 pb-8">
          {
            askama.if_("let Some(correction) = spell_correction", () => (
              <div class="pb-3">
                Did you mean:{" "}
                <a
                  class="title-link font-bold italic"
                  href="/search?q={{ correction|urlencode }}"
                >
                  {askama`correction $ {{lorem.sentence}}`}
                </a>
              </div>
            ))
          }

          <div class="search-result flex flex-col space-y-3">
            {
              askama.for_("item in search_result", () => (
                <div class="flex w-full py-3">
                  <div class="flex w-full flex-col">
                    <div class="mb-1 flex text-sm">
                      <div class="mr-2 flex items-center">
                        <img
                          src={askama.fake(
                            "/favicons/{{ item.domain|urlencode }}",
                            "{{image.avatar}}"
                          )}
                          width="13px"
                        />
                      </div>
                      <div>
                        <a
                          class="text-gray-600 hover:no-underline"
                          href="{{ item.url }}"
                        >
                          {askama`item.pretty_url $ {{internet.url}}`}
                        </a>
                      </div>
                    </div>
                    <div class="mb-1 text-lg font-medium">
                      <a class="title-link" href="{{ item.url }}">
                        {askama`item.title $ {{lorem.sentence}}`}
                      </a>
                    </div>
                    <div class="text-sm">
                      {askama.if_("let Some(val) = item.last_updated", () => (
                        <>
                          <span class="text-gray-500">{askama`val $ 2. May 2022`}</span>{" "}
                          â€”
                        </>
                      ))}
                      {askama`item.snippet $ {{lorem.lines}}`}
                    </div>
                  </div>
                  <div class="flex h-full items-center">
                    <div class="h-20 w-20 pl-2 pt-1 pb-1">
                      {askama.if_(
                        "let Some(val) = item.primary_image_uuid",
                        <a href="{{ item.url|urlencode }}">
                          <img
                            class="h-full w-full rounded-full object-cover"
                            src={askama.fake(
                              "/image/{{ val|urlencode }}",
                              "{{image.avatar}}"
                            )}
                          />
                        </a>
                      )}
                    </div>
                  </div>
                </div>
              ))
            }
          </div>

          <div class="flex w-full justify-center items-center mt-5">
            {
              askama.if_(
                "let Some(url) = prev_page_url",
                <a href="{{ url }}">
                  <Hero class="change-page-active" icon="chevron-left" />
                </a>,
                <Hero class="change-page-inactive" icon="chevron-left" />
              )
            }
            <div class="mr-2 ml-2">
              Page {askama`current_page $ 5`}
            </div>
            <a href="{{ next_page_url }}">
              <Hero class="change-page-active" icon="chevron-right" />
            </a>
          </div>
        </div>
      </div>

      <!-- Entity -->
      {
        askama.if_(
          "let Some(entity) = entity",
          <div class="row-start-2 flex justify-center pt-10 md:col-start-2 md:row-span-2 md:row-start-1">
            <Entity entity="entity" />
          </div>
        )
      }
    </div>
  </main>

  <Footer />
</Layout>

<style>
  .change-page-inactive {
    @apply w-6 text-gray-500;
  }
  .change-page-active {
    @apply w-6 text-brand/80 hover:text-brand;
  }

  .title-link {
    color: #1a0dab;
  }

  .title-link:visited {
    color: #609;
  }

  .search-result {
    text-rendering: optimizeLegibility;
    font-smooth: grayscale;
    -moz-osx-font-smoothing: grayscale;
  }
</style>
