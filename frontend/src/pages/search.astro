---
import Layout from "../layouts/Layout.astro";
import Searchbar from "../components/Searchbar.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
import Entity from "../components/Entity.astro";
import GoggleSelector from "../components/GoggleSelector.astro";
import { askama } from "../askama";
---

<Layout title="Cuely - {{ query }}">
  <main class="flex flex-col w-full">
    <div class="flex items-center h-24 border bg-neutral-50">
      <div class="ml-14 mr-14 w-12 h-12">
        <a href="/">
          <img src="/assets/images/logo.svg" class="w-full h-full" />
        </a>
      </div>
      <Searchbar query={askama`query`} />
      <Navbar />
    </div>

    <div class="flex">
      <div class="flex pl-40 flex-col">
        <div class="flex mt-1 pl-3 pt-2 max-w-3xl pr-24 w-full justify-between">
          <div
            class="flex flex-col h-full justify-center text-sm text-gray-600"
          >
            <p class="h-fit">
              Found {askama`num_matches`} results in {
                askama`search_duration_sec`
              } seconds
            </p>
          </div>
          <div class="flex">
            <GoggleSelector
              current_goggle_url="current_goggle_url"
              default_goggles="default_goggles"
            />
            <div
              class="select-region h-full flex flex-col justify-center p-0 m-0"
            >
              <select
                form="searchbar-form"
                name="gl"
                onchange="document.getElementById('searchbar-form').submit()"
                class="p-0 m-0 hover:cursor-pointer bg-transparent text-sm border-0 max-w-[100px]"
              >
                {
                  askama.for_(
                    "region_selection in all_regions",
                    askama.match("region_selection", {
                      "RegionSelection::Selected(region)": (
                        <option value="{{ region.gl() }}" selected>
                          {askama`region.name()`}
                        </option>
                      ),
                      "RegionSelection::Unselected(region)": (
                        <option value="{{ region.gl() }}">
                          {askama`region.name()`}
                        </option>
                      ),
                    })
                  )
                }
              </select>
            </div>
          </div>
        </div>
        <div class="flex flex-col pt-4 pb-8">
          {
            askama.if_("let Some(correction) = spell_correction", () => (
              <div class="pl-3 pb-3">
                Did you mean:{" "}
                <a
                  class="title-link font-bold italic"
                  href="/search?q={{ correction|urlencode }}"
                >
                  {askama`correction`}
                </a>
              </div>
            ))
          }

          <div class="search-result flex flex-col space-y-3">
            {
              askama.for_("item in search_result", () => (
                <div class="flex w-full max-w-3xl p-3">
                  <div class="flex w-full flex-col">
                    <div class="mb-1 flex text-sm">
                      <div class="mr-2 flex items-center">
                        <img
                          src="/favicons/{{ item.domain|urlencode }}"
                          width="13px"
                        />
                      </div>
                      <div>
                        <a
                          class="text-gray-600 hover:no-underline"
                          href="{{ item.url }}"
                        >
                          {askama`item.pretty_url`}
                        </a>
                      </div>
                    </div>
                    <div class="mb-1 text-lg font-medium">
                      <a class="title-link" href="{{ item.url }}">
                        {askama`item.title`}
                      </a>
                    </div>
                    <div class="text-sm">
                      {askama.if_("let Some(val) = item.last_updated", () => (
                        <>
                          <span class="text-gray-500">{askama`val`}</span> â€”
                        </>
                      ))}
                      {askama`item.snippet`}
                    </div>
                  </div>
                  <div class="flex h-full items-center">
                    <div class="h-20 w-20 pl-2 pt-1 pb-1">
                      {askama.if_(
                        "let Some(val) = item.primary_image_uuid",
                        <a href="{{ item.url|urlencode }}">
                          <img
                            class="h-full w-full rounded-full object-cover"
                            src="/image/{{ val|urlencode }}"
                          />
                        </a>
                      )}
                    </div>
                  </div>
                </div>
              ))
            }
          </div>

          <div class="flex w-full justify-center items-center pr-24 mt-5">
            {
              askama.if_(
                "current_page == 1",
                <div class="prev-page gray-arrow" />,
                askama.if_(
                  "let Some(url) = prev_page_url",
                  <a href="{{ url }}">
                    <div class="prev-page cuely-color-arrow" />
                  </a>,
                  <div class="prev-page gray-arrow" />
                )
              )
            }
            <div class="mr-2 ml-2">
              Page {askama`current_page`}
            </div>
            <a href="{{ next_page_url }}">
              <div class="next-page cuely-color-arrow"></div>
            </a>
          </div>
        </div>
      </div>

      {askama.if_("let Some(entity) = entity", <Entity entity="entity" />)}
    </div>
  </main>

  <Footer />
</Layout>

<style>
  .prev-page {
    width: 16px;
    height: 16px;
    -webkit-mask: url(/assets/images/arrow.svg) no-repeat center;
    mask: url(/assets/images/arrow.svg) no-repeat center;
    mask-size: contain;
    transform: rotate(180deg);
  }

  .next-page {
    width: 16px;
    height: 16px;
    -webkit-mask: url(/assets/images/arrow.svg) no-repeat center;
    mask: url(/assets/images/arrow.svg) no-repeat center;
    mask-size: contain;
  }

  .gray-arrow {
    background-color: gray;
  }

  .cuely-color-arrow {
    background-color: #0b7bff;
  }

  .title-link {
    color: #1a0dab;
  }

  .title-link:visited {
    color: #609;
  }

  .search-result {
    text-rendering: optimizeLegibility;
    font-smooth: grayscale;
    -moz-osx-font-smoothing: grayscale;
  }
</style>
