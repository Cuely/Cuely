---
import { askama } from "../askama";

export interface Props {
  active?: number | null;
  queryUrlPart?: string;
  withAlice?: string,
}

const { queryUrlPart: query, withAlice, active = null } = Astro.props;

const links = [
  { url: "/search", title: "Search" },
  { url: "/explore", title: "Explore" },
  { url: "/chat", title: "Chat" }
];
---
{
    links.map((l, idx) => (
      <>
        {l.url == "/chat" && (askama.if_("with_alice.unwrap_or(true)", () => (
          <div class="inline relative z-0">
              <a class="link px-2 py-1 rounded-full text-sm" href={l.url + (query ? "?" + query : "")}>
                  {l.title}
              </a>
              {active === idx && (
                  <div class="w-full h-[1px] absolute left-0 right-0 bottom-[-11px] bg-brand_contrast"></div>
              )}
          </div>
        ))
      ) || (
      <div class="inline relative z-0">
          <a class="link px-2 py-1 rounded-full text-sm" href={l.url + (query ? "?" + query : "")}>
              {l.title}
          </a>
          {active === idx && (
              <div class="w-full h-[1px] absolute left-0 right-0 bottom-[-11px] bg-brand_contrast"></div>
          )}
        </div>
      )}
      </>
    ))
}
<style>
  .link {
    @apply transition hover:bg-brand/5 hover:text-brand hover:no-underline;
  }
</style>