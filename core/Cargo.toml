[package]
name = "cuely"
version = "0.1.0"
edition = "2021"
license = "AGPL-3.0-or-later"
authors = ['Cuely ApS. <hello@cuely.io>']
default-run = "cuely"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
dev = ["rusoto_s3", "rusoto_core"]

[[bin]]
name = "cuely"
path = "src/main.rs"

[dependencies]
bincode = { workspace = true }
clap = { workspace = true }
encoding_rs = { workspace = true }
flate2 = { workspace = true }
indicatif = { workspace = true }
itertools = { workspace = true }
rayon = { workspace = true }
reqwest = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tantivy = { workspace = true }
thiserror = { workspace = true }
toml = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
whatlang = { workspace = true }
tokio = { workspace = true }
askama = { workspace = true }
axum = { workspace = true }
anyhow = { workspace = true }
axum-extra = { workspace = true }
html-escape = { workspace = true }
logos = { workspace = true }
csv = { workspace = true }
fst = { workspace = true }
rocksdb = { workspace = true }
image = { workspace = true }
chrono = { workspace = true }
uuid = { workspace = true }
futures = { workspace = true }
quick-xml = { workspace = true }
bzip2 = { workspace = true }
parse_wiki_text = { workspace = true }
md5 = { workspace = true }
memmap = { workspace = true }
regex = { workspace = true }
http = { workspace = true }
kuchiki = { workspace = true }
serde_urlencoded = { workspace = true }
rust-stemmers = { workspace = true }
min-max-heap = { workspace = true }
base64 = { workspace = true }
async-trait = { workspace = true }
axum-macros = { workspace = true }
urlencoding = { workspace = true }
rusoto_s3 = { workspace = true, optional = true }
rusoto_core = { workspace = true, optional = true }
bitvec = { workspace = true }
tower-http = { workspace = true }
once_cell = { workspace = true }
optics = { path = "../optics" }
crossbeam-channel = { workspace = true }
num_cpus = { workspace = true }
onnxruntime = { workspace = true }
tokenizers = { workspace = true }

[dev-dependencies]
criterion = { workspace = true }
maplit = { workspace = true }
rand = { workspace = true }

[[bench]]
name = "search-preindexed"
harness = false

[[bench]]
name = "search-preindexed-optic"
harness = false

[[bench]]
name = "harmonic-centrality"
harness = false

[[bench]]
name = "online-harmonic"
harness = false
